{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\mini project from react\\\\slot\\\\src\\\\SlotMach.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotM = props => {\n  // let x= props.x;\n  // let y= props.y;\n  // let z= props.z;\n  let {\n    x,\n    y,\n    z\n  } = props;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" This is Matching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" This is  Not Matching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = SlotM;\nexport default SlotM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"sources":["D:/reacttut/mini project from react/slot/src/SlotMach.jsx"],"names":["React","SlotM","props","x","y","z"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AACA,MAAMC,KAAK,GAAGC,KAAD,IAAS;AAGlB;AACA;AACA;AACD,MAAI;AAACC,IAAAA,CAAD;AAAGC,IAAAA,CAAH;AAAKC,IAAAA;AAAL,MAASH,KAAb;;AACC,MAAGC,CAAC,KAAGC,CAAJ,IAASA,CAAC,KAAGC,CAAhB,EAAkB;AACd,wBACI;AAAA,6BACG;AAAK,QAAA,SAAS,EAAG,YAAjB;AAAA,gCACA;AAAA,qBACKF,CADL,OACSC,CADT,OACaC,CADb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADJ;AAYH,GAbD,MAaM;AACF,wBACI;AAAA,6BACG;AAAK,QAAA,SAAS,EAAG,YAAjB;AAAA,gCACA;AAAA,0BAAMF,CAAN,OAAUC,CAAV,OAAcC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADJ;AAUH;AACJ,CAhCD;;KAAMJ,K;AAiCN,eAAeA,KAAf","sourcesContent":["\r\nimport React from 'react'\r\nconst SlotM =(props)=>{\r\n   \r\n\r\n    // let x= props.x;\r\n    // let y= props.y;\r\n    // let z= props.z;\r\n   let {x,y,z} =props;\r\n    if(x===y && y===z){\r\n        return(\r\n            <>\r\n               <div className = \"slot_inner\">\r\n               <h1> \r\n                   {x} {y} {z}\r\n               </h1>\r\n               <h1> This is Matching.</h1>\r\n               <hr/>\r\n               </div>\r\n\r\n            </>\r\n        );\r\n    } else{\r\n        return(\r\n            <>\r\n               <div className = 'slot_inner'>\r\n               <h1> {x} {y} {z}</h1>\r\n               <h1> This is  Not Matching.</h1>\r\n               <hr/>\r\n               </div>\r\n\r\n            </>\r\n            );\r\n    }\r\n};\r\nexport default SlotM"]},"metadata":{},"sourceType":"module"}